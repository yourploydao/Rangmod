// buildVectors.mts (‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏ä‡πâ es‡πÉ‡∏ôts ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡πÅ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏≠‡∏Å‡∏°‡∏≤)
import fs from 'fs'
import path from 'path'
import { getCombinedDormData } from './mongo'
import { getLocalEmbedding } from './embedding'

async function buildEmbeddingJson() {
  const data = await getCombinedDormData()
  console.log('üîç ‡∏î‡∏∂‡∏á‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£')

  const vectors = []

  for (const dorm of data) {
    const text = `${dorm.name} | ${dorm.full_location} | ${dorm.rooms.join(' / ')} | ${dorm.facilities.join(', ')}`
    console.log('üì¶ ‡∏™‡∏£‡πâ‡∏≤‡∏á embedding ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:', text)
    const embedding = await getLocalEmbedding(text)
    vectors.push({ text, embedding })
  }

  const filePath = path.join(process.cwd(), 'public/vector/dorm_vectors.json')
  fs.mkdirSync(path.dirname(filePath), { recursive: true })
  fs.writeFileSync(filePath, JSON.stringify(vectors, null, 2), 'utf-8')

  console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å dorm_vectors.json ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß')
}

buildEmbeddingJson()
